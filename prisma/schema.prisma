// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id                   String                @id @default(cuid())
  clerkUserId          String                @unique // clerk user id 
  email                String                @unique
  name                 String?
  imageUrl             String?
  phone                String?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  role                 UserRole              @default(USER)
  savedCars            UserSaveCars[]
  testDrives           TestDriveBooking[]
}

enum UserRole {
  USER
  ADMIN
}

model Car {
  id                   String                @id @default(uuid())
  make                 String
  model                String
  year                 Int
  price                Decimal               @db.Decimal(10, 2)
  mileage              Int
  color                String
  fuelType            String
  transmission        String
  bodyType            String
  seats                Int?
  description         String
  status              CarStatus             @default(AVAILABLE)
  featured            Boolean               @default(false)
  images              String[]              // Array of Supabase storage
  savedBy             UserSavedCar[]
  testDriveBookings    TestDriveBooking[]
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt

  @@index([make, model])
  @@index([bodyType])
  @@index([price])
  @@index([year])
  @@index([status])
  @@index([fuelType])
  @@index([featured])
}

enum CarStatus {
  AVAILABLE
  UNAVAILABLE
  SOLD
}

model DealershipInfo {
  id          String        @id @default(uuid())
  name        String        @default("Gadi Ghar")
  address     String        @default("Clifton Block 8 ,Karachi , Pakistan")
  phone       String        @default("03343149433")
  email       String        @default("hamzaisadev@gmail.com")
  workingHours WorkingHour[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model WorkingHour {
  id          String        @id @default(uuid())
  dealershipId String
  dealership  DealershipInfo @relation(fields: [dealershipId], references: [id], onDelete: Cascade)
  dayOfWeek   DayOfWeek
  openTime    String        // Format: "HH:MM" (24-hour)
  closeTime   String        // Format: "HH:MM" (24-hour)
  isOpen      Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([dealershipId ,dayOfWeek])
  @@index([dealershipId])
  @@index([dayOfWeek])
  @@index([isOpen])
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}





